{"ast":null,"code":"var _jsxFileName = \"W:\\\\Programming\\\\gitHUB\\\\REACT\\\\firstTODO\\\\firsttodo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport './App.css';\nimport Todos from './components/Todos';\nimport AddTodo from './components/addTodo';\nimport About from './components/pages/About'; //import uuid from 'uuid'\n\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title: title,\n        completed: false\n      }).then(resp => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } //Toggle Complete (id kommer nede fra todoItem, gjennom todos - og hit)\n\n\n  render() {\n    return (//this is JSX - legg til flere HTML classes med className i App\n      React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(AddTodo, {\n          addTodo: this.addTodo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(Todos, {\n          todos: this.state.todos,\n          markComplete: this.markComplete,\n          delTodo: this.delTodo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["W:\\Programming\\gitHUB\\REACT\\firstTODO\\firsttodo\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","title","post","then","resp","res","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/layout/Header'\nimport './App.css';\nimport Todos from './components/Todos'\nimport AddTodo from './components/addTodo'\nimport About from './components/pages/About'\n//import uuid from 'uuid'\nimport axios from 'axios'\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }))\n  }\n\n  //Toggle Complete (id kommer nede fra todoItem, gjennom todos - og hit)\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n    })\n  }\n\n  //delete todo\n  delTodo = (id) => {\n    this.setState({\n      todos: [...this.state.todos.filter(\n        todo => todo.id !== id)]\n    })\n  }\n\n  //add todo\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title: title,\n      completed :false\n    })\n      .then(resp => this.setState({ todos: \n        [...this.state.todos, res.data] }))\n    \n  }\n\n  render() {\n   \n    return ( //this is JSX - legg til flere HTML classes med className i App\n      <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodo={this.addTodo}/>\n              <Todos todos={this.state.todos} markComplete={this.markComplete}\n              delTodo={this.delTodo} /> \n            </React.Fragment>\n          )} />\n          <Route path=\"/about\" component={About} />\n          \n        </div>\n      </div>\n      </Router>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}